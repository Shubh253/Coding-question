import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.function.*;
import java.util.regex.*;
import java.util.stream.*;
import static java.util.stream.Collectors.joining;
import static java.util.stream.Collectors.toList;

class Result {

    /*
     * Complete the 'timeInWords' function below.
     *
     * The function is expected to return a STRING.
     * The function accepts following parameters:
     *  1. INTEGER h
     *  2. INTEGER m
     */

    public static String timeInWords(int h, int m) {
    String v[] = {"zero","one","two" ,"three","four","five","six","seven","eight","nine","ten","eleven","twelve","thirteen","fourteen","fifteen","sixteen","seventeen","eighteen","nineteen","twenty","twenty one","twenty two","twenty three","twenty four","twenty five","twentysix","twenty seven","twenty eight","twenty nine"};
     String time;
     if(m<=30){
        if(m==00){
           time = v[h]+" o' clock";
        }
        else if(m==15){
           time="quarter past "+v[h];}
         else if(m==30){
           time="half past "+v[h];}
         else if(m==01){
           time="one minute past "+v[h];}
        else{
          time=v[m]+" minutes past "+v[h];
             }
         }else{
             if(m==45){
                 time="quarter to "+v[h+1];
             }else if(m==59){
                 time=v[60-m]+" minute to "+v[h+1];
             }else{
                 time=v[60-m]+" minutes to "+v[h+1];
             }
         }
         return time;

    }

}

public class Solution {
    public static void main(String[] args) throws IOException {
        BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(System.in));
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int h = Integer.parseInt(bufferedReader.readLine().trim());

        int m = Integer.parseInt(bufferedReader.readLine().trim());

        String result = Result.timeInWords(h, m);

        bufferedWriter.write(result);
        bufferedWriter.newLine();

        bufferedReader.close();
        bufferedWriter.close();
    }
}
